{{ $image := "" }}
{{- if  ((.Values.tonicai).pii_detection).image }}
{{ $image = .Values.tonicai.pii_detection.image }}
{{ else }}
  {{- if .Values.useUnprivilegedContainers }}
  {{ $image = "quay.io/tonicai/tonic_pii_detection_unprivileged" }}
  {{- else }}
  {{ $image = "quay.io/tonicai/tonic_pii_detection" }}
  {{- end}}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tonic-pii-detection
  namespace: {{ .Release.Namespace }}
  labels:
    app: tonic-pii-detection  
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tonic-pii-detection
  strategy: {}
  template:
    metadata:
      labels:
        app: tonic-pii-detection
    spec:
      securityContext:
        {{- if .Values.useUnprivilegedContainers }}
        seccompProfile:
          type: RuntimeDefault
        runAsNonRoot: true
        {{- end }}
      containers:
      - securityContext:
          {{- if .Values.useUnprivilegedContainers }}
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          {{- end }}
          {{- if .Values.readOnlyRootFilesystem }}
          readOnlyRootFilesystem: true 
          {{- end }}
        env:
        - name: ENABLE_LOG_COLLECTION
          value: {{quote .Values.enableLogCollection }}
        - name: ENVIRONMENT_NAME
          value: {{ .Values.environmentName }}
        image: {{ $image }}:{{ .Values.tonicVersion }}
        imagePullPolicy: Always
        name: tonic-pii-detection
        volumeMounts:
          {{- if .Values.readOnlyRootFilesystem }}
          - name: public-log
            mountPath: /publish/logs_public
          - name: var-run-nginx
            mountPath: /var/run/nginx
          - name: var-run-superd
            mountPath: /var/run/supervisor
          - name: tmp
            mountPath: /tmp
          - name: var-log-nginx
            mountPath: /var/log/nginx
          - name: var-log-superd
            mountPath: /var/log/supervisor
          - name: vector
            mountPath: /tonic/vector_data
          - name: log
            mountPath: /publish/log
          - name: var-cache-nginx
            mountPath: /var/cache/nginx
          {{- end }}
        ports:
        - containerPort: 7687
        resources:
          limits:
            memory: "512Mi"
          requests:
            memory: "512Mi"
            ephemeral-storage: "1Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: 7687
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 7687
            scheme: HTTPS
          initialDelaySeconds: 10
          periodSeconds: 10
      restartPolicy: Always
      imagePullSecrets:
      - name: tonicai-build-writer-pull-secret
      serviceAccountName: {{ template "tonic.serviceAccountName" . }}
      volumes:
        {{- if .Values.readOnlyRootFilesystem }}
        - name: public-log
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: var-log-nginx
          emptyDir: {}
        - name: var-log-superd
          emptyDir: {}
        - name: var-run-nginx
          emptyDir: {}
        - name: var-run-superd
          emptyDir: {}
        - name: vector
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: log
          emptyDir: {}
        {{- end }}
